/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Build a war file
//    id 'war'

    // to run gradle-versions-plugin use "gradle dependencyUpdates"
    id "com.github.ben-manes.versions" version "0.42.0"

    // Publish to maven
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    api 'org.codehaus.groovy:groovy-all:3.0.9'
    // Findbugs need only during compile (used by freemarker and various moqui classes)
    compileOnly 'com.google.code.findbugs:annotations:3.0.1'

    // Apache Commons
    api 'commons-codec:commons-codec:1.15' // Apache 2.0

    // Freemarker
    api 'org.freemarker:freemarker:2.3.31' // Apache 2.0

    // Java Specifications
    api 'javax.cache:cache-api:1.1.1'
    // NOTE: javax.activation:javax.activation-api is required by jaxb-api, has classes same as old 2012 javax.activation:activation used by javax.mail
    // NOTE: as of Java 11 the com.sun packages no longer available so for javax.mail need full javax.activation jar (also includes javax.activation-api)
    api 'com.sun.activation:javax.activation:1.2.0' // CDDL 1.1

    // SLF4J, Log4j 2 (note Log4j 2 is used by various libraries, best not to replace it even if mostly possible with SLF4J)
    api 'org.slf4j:slf4j-api:2.0.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    runtimeOnly 'org.apache.logging.log4j:log4j-jcl:2.19.0'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j2-impl:2.19.0'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


group = 'org.moqui'
version = 'v0.0.0'

tasks.named('jar') {
    manifest {attributes('Automatic-Module-Name': 'org.moqui', 'Implementation-Title': project.name, 'Implementation-Version': project.version, 'Implementation-Vendor': 'Moqui Ecosystem') }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        MEntity(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/acetousk/MEntity"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
